<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">
	<mvc:annotation-driven/>
	<!-- 扫描controller自动注入为bean -->
	<context:component-scan base-package="com.jsdx.kato.web" />
 
	<!--
		此标签会注入DefaultServletHttpRequestHandler对象
		以下是处理请求的方式，获取容器的RequestDispatcher，进行请求转发
		RequestDispatcher rd = this.servletContext.getNamedDispatcher(this.defaultServletName);
		if (rd == null) {
			throw new IllegalStateException("A RequestDispatcher could not be located for the default servlet '" +
					this.defaultServletName + "'");
		}
		rd.forward(request, response);
		
		当然，如果dispatcherServlet配置拦截路径为/*时，springmvc会拦截所有的请求，*.jsp/*.css/*.do等
		这个时候如果没有配置default-servlet-handler，则jsp和css会出现404，配置了jsp会显示源码   因此dispatcherServlet拦截路径不能配置成/*
		
		如果dispatcherServlet配置拦截路径为/时，则不会拦截*.jsp，jsp交由tomcat的default的servlet处理
	 -->
    <mvc:default-servlet-handler default-servlet-name="default"/>
    
    <!--
    	当dispatcherServlet配置的拦截路径为/*时，访问跟路径是会重定向到index.jsp 
    	如果web.xml中配置了
		<welcome-file-list>
			<welcome-file>index.jsp</welcome-file>
			<welcome-file>index1.jsp</welcome-file>
		</welcome-file-list>
		则会先访问index.jsp，然后index1.jsp，如果访问不到则出现404
		
		也就是如果说对于访问跟路径来说，配置了welcome-file-list，则下面配置毫无意义
     -->
    <mvc:view-controller path="/" view-name="redirect:index.jsp"/>
 
	<!--
		通过标志位detectAllViewResolvers判断是否需要检索所有的viewResolver，如果为true，
		则一下配置的id并无实际意义，可以不进行配置 
		List<ViewResolver> org.springframework.web.servlet.DispatcherServlet.viewResolvers 
		spring mvc默认使用org.springframework.web.servlet.view.InternalResourceViewResolver
	 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

	<!-- interceptor setting -->
	<mvc:interceptors>
	    <mvc:interceptor> 
	        <mvc:mapping path="/**"/>
	        <bean class="com.jsdx.kato.common.interceptor.AuthorityInterceptor"></bean>
	    </mvc:interceptor>
	</mvc:interceptors>
</beans>